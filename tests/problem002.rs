/*
Problem 002

Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*/

use std::iter::AdditiveIterator;

struct FibIter {
  previous: uint,
  current: uint,
}

impl FibIter {
  fn new() -> FibIter {
    FibIter{
      previous: 0,
      current: 1,
    }
  }
}

impl Iterator<uint> for FibIter {
  fn next(&mut self) -> Option<uint> {
    let next = self.previous + self.current;
    self.previous = self.current;
    self.current = next;
    Some(next)
  }
}

pub fn problem002() -> uint {
  let limit = 4_000_000;

  FibIter::new()
    .filter(|n| n % 2 == 0)
    .take_while(|n| *n < limit)
    .sum()
}

#[test]
pub fn test_problem002() {
  assert_eq!(problem002(), 4613732);
}
